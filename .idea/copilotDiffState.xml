<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/plugins/maib/adx_download.py">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/plugins/maib/adx_download.py" />
              <option name="originalContent" value="from nonebot.adapters.onebot.v11 import Event, Bot&#10;from nonebot.params import CommandArg&#10;import tempfile&#10;import httpx&#10;import os&#10;import re&#10;&#10;from . import adx_download&#10;&#10;&#10;@adx_download.handle()&#10;async def handle_download(bot: Bot, event: Event):&#10;    msg = str(event.get_message())&#10;    # 提取数字&#10;    match = re.search(r&quot;下载谱面\s*([0-9]+)&quot;, msg)&#10;    if match:&#10;        song_id = match.group(1)&#10;        url = f&quot;https://api.milkbot.cn/server/api/nobga_download?id={song_id}&quot;&#10;        await adx_download.send(f&quot;正在下载曲目[{song_id}]，请稍候……&quot;)&#10;        try:&#10;            async with httpx.AsyncClient() as client:&#10;                resp = await client.get(url)&#10;                resp.raise_for_status()&#10;                # 获取文件名&#10;                content_disp = resp.headers.get(&quot;content-disposition&quot;, &quot;&quot;)&#10;                filename_match = re.search(r'filename=&quot;?([^&quot;]+)&quot;?', content_disp)&#10;                filename = filename_match.group(1) if filename_match else f&quot;{song_id}.zip&quot;&#10;                with tempfile.NamedTemporaryFile(delete=False, suffix=&quot;.zip&quot;) as tmp_file:&#10;                    tmp_file.write(resp.content)&#10;                    tmp_path = tmp_file.name&#10;            # 上传到QQ群文件&#10;            group_id = event.group_id if hasattr(event, &quot;group_id&quot;) else None&#10;            if not group_id:&#10;                await adx_download.finish(&quot;只能在群聊中使用该命令。&quot;)&#10;            await bot.call_api(&#10;                &quot;upload_group_file&quot;,&#10;                group_id=group_id,&#10;                file=tmp_path,&#10;                name=filename&#10;            )&#10;            await adx_download.finish(f&quot;曲目[{song_id}]已上传到群文件：{filename}&quot;)&#10;        except Exception as e:&#10;            await adx_download.finish(f&quot;下载或上传失败：{e}&quot;)&#10;        finally:&#10;            if 'tmp_path' in locals() and os.path.exists(tmp_path):&#10;                os.remove(tmp_path)&#10;    else:&#10;        await adx_download.finish(&quot;未识别到谱面ID，请检查格式。&quot;)&#10;" />
              <option name="updatedContent" value="from nonebot.adapters.onebot.v11 import Event, Bot&#10;from nonebot.params import CommandArg&#10;import tempfile&#10;import httpx&#10;import os&#10;import re&#10;import zipfile&#10;&#10;from . import adx_download&#10;&#10;&#10;@adx_download.handle()&#10;async def handle_download(bot: Bot, event: Event):&#10;    msg = str(event.get_message())&#10;    # 提取数字&#10;    match = re.search(r&quot;下载谱面\s*([0-9]+)&quot;, msg)&#10;    if match:&#10;        song_id = match.group(1)&#10;        url = f&quot;https://api.milkbot.cn/server/api/nobga_download?id={song_id}&quot;&#10;        await adx_download.send(f&quot;正在下载曲目[{song_id}]，请稍候……&quot;)&#10;        tmp_dir = tempfile.gettempdir()&#10;        tmp_path = os.path.join(tmp_dir, f&quot;{song_id}.zip&quot;)&#10;        try:&#10;            async with httpx.AsyncClient() as client:&#10;                resp = await client.get(url)&#10;                resp.raise_for_status()&#10;                with open(tmp_path, &quot;wb&quot;) as f:&#10;                    f.write(resp.content)&#10;            # 解压并读取maidata.txt第一行&#10;            maidata_title = None&#10;            with zipfile.ZipFile(tmp_path, &quot;r&quot;) as zip_ref:&#10;                for name in zip_ref.namelist():&#10;                    if name.lower() == &quot;maidata.txt&quot;:&#10;                        with zip_ref.open(name) as maidata_file:&#10;                            first_line = maidata_file.readline().decode(&quot;utf-8&quot;, errors=&quot;ignore&quot;).strip()&#10;                            title_match = re.search(r&quot;&amp;title=(.*)&quot;, first_line)&#10;                            if title_match:&#10;                                maidata_title = title_match.group(1)&#10;                        break&#10;            # 上传到QQ群文件&#10;            group_id = event.group_id if hasattr(event, &quot;group_id&quot;) else None&#10;            if not group_id:&#10;                await adx_download.finish(&quot;只能在群聊中使用该命令。&quot;)&#10;            await bot.call_api(&#10;                &quot;upload_group_file&quot;,&#10;                group_id=group_id,&#10;                file=tmp_path,&#10;                name=f&quot;{song_id}.zip&quot;&#10;            )&#10;            if maidata_title:&#10;                await adx_download.finish(f&quot;曲目[{song_id}]（{maidata_title}）已上传到群文件：{song_id}.zip&quot;)&#10;            else:&#10;                await adx_download.finish(f&quot;曲目[{song_id}]已上传到群文件：{song_id}.zip&quot;)&#10;        except Exception as e:&#10;            await adx_download.finish(f&quot;下载或上传失败：{e}&quot;)&#10;        finally:&#10;            if os.path.exists(tmp_path):&#10;                os.remove(tmp_path)&#10;    else:&#10;        await adx_download.finish(&quot;未识别到谱面ID，请检查格式。&quot;)" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>